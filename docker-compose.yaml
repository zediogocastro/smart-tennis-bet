services:
  db:
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: /pgdata
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - ./postgres_data:/pgdata
  
  web:
    build: ./flask_app
    command: flask run --host=0.0.0.0
    environment:
      FLASK_APP: ${FLASK_APP}
      FLASK_ENV: ${FLASK_ENV}
      DATABASE_URL: ${DATABASE_URL}  # Flask will use this to connect to the DB
    ports:
      - "5000:5000" # Expose port 5000 for Flask
    depends_on:
      - db # Flask will wait for the DB to be ready before starting
    volumes:
      - ./:/app  # Mount your Flask app source code for development

  dash:
    build: ./flask_app  # Same build context since both Flask and Dash use the same code
    command: python app.py  # Change this to run your Dash app (app.py)
    environment:
      DATABASE_URL: ${DATABASE_URL} 
    ports:
      - "8050:8050"  # Expose the Dash app on port 8050
    depends_on:
      - web
      - db
    volumes:
      - ./dash_app:/app  # Mount your Dash app source code for development